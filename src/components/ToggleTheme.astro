---

---

<button
  class="toggle-theme flex items-center p-2 cursor-pointer bg-transparent border-none outline-none z-10 relative"
  id="toggle-theme"
  aria-label="Toggle theme"
  title="Toggle theme"
>
  <div class="w5 h5 i-myna-moon dark:(i-myna-sun w5 h5)"></div>
</button>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    console.log("Theme toggle script loaded");

    let theme = localStorage.getItem("isDarkMode") || "auto";
    let windowTheme = window.matchMedia("(prefers-color-scheme: dark)").matches;
    let isDarkMode = theme === "true" || (theme === "auto" && windowTheme);

    if (isDarkMode) {
      document.documentElement.classList.add("dark");
      localStorage.setItem("isDarkMode", "true");
    } else {
      document.documentElement.classList.remove("dark");
      localStorage.setItem("isDarkMode", "false");
    }

    function toggleDarkMode() {
      console.log("Toggle dark mode function called");
      const isTransitionAvailable =
        document.startViewTransition &&
        !window.matchMedia("(prefers-reduced-motion: reduce)").matches;

      if (!isTransitionAvailable) {
        let isDark = localStorage.getItem("isDarkMode") === "true";
        document.documentElement.classList.toggle("dark", !isDark);
        localStorage.setItem("isDarkMode", (!isDark).toString());
        console.log("Theme toggled to:", !isDark ? "dark" : "light");
        return;
      }

      const transition = document.startViewTransition(async () => {
        const element = document.documentElement;
        let isDark = element.classList.contains("dark");

        isDark = !isDark;

        if (isDark) {
          element.classList.add("dark");
        } else {
          element.classList.remove("dark");
        }

        localStorage.setItem("isDarkMode", isDark.toString());
      });

      transition.ready.then(() => {
        const button = document.getElementById("toggle-theme");

        let isDark = localStorage.getItem("isDarkMode") === "true";

        const x = button.getBoundingClientRect().left + button.offsetWidth / 2;
        const y = button.getBoundingClientRect().top + button.offsetHeight / 2;
        const endRadius = Math.hypot(
          Math.max(window.innerWidth - x, x),
          Math.max(window.innerHeight - y, y),
        );

        const clipPath = [
          `circle(0px at ${x}px ${y}px)`,
          `circle(${endRadius}px at ${x}px ${y}px)`,
        ];

        document.documentElement.animate(
          {
            clipPath: isDark ? [...clipPath].reverse() : clipPath,
          },
          {
            duration: 500,
            easing: "ease-out",
            pseudoElement: isDark
              ? "::view-transition-old(root)"
              : "::view-transition-new(root)",
          },
        );
      });
    }

    const toggleButton = document.getElementById("toggle-theme");
    if (toggleButton) {
      console.log("Toggle button found, adding event listener");
      toggleButton.addEventListener("click", toggleDarkMode);

      // Add a test to verify the button is clickable
      toggleButton.addEventListener("click", function () {
        console.log("Button clicked!");
      });
    } else {
      console.error("Toggle button not found!");
    }
  });

  document.addEventListener("astro:after-swap", () => {
    localStorage.getItem("isDarkMode") === "true"
      ? document.documentElement.classList.add("dark")
      : document.documentElement.classList.remove("dark");
  });
</script>
